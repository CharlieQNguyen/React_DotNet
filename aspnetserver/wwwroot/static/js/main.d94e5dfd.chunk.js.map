{"version":3,"sources":["utilities/Constants.js","components/PostCreateForm.js","components/PostUpdateForm.js","components/GenerateCSVButton.js","App.js","index.js"],"names":["API_BASE_URL_PRODUCTION","ENDPOINTS","Constants","concat","API_URL_GET_ALL_POSTS","API_URL_GET_POST_BY_ID","API_URL_CREATE_POST","API_URL_UPDATE_POST","API_URL_DELETE_POST_BY_ID","PostCreateForm","props","initialFormData","Object","freeze","title","post","content","_useState","useState","_useState2","_slicedToArray","formData","setFormData","handelChange","e","_objectSpread","_defineProperty","target","name","value","React","createElement","className","type","onChange","onClick","preventDefault","postToCreate","postId","url","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","responseFromServer","console","log","catch","error","alert","onPostCreated","PostUpdateForm","postToUpdate","onPostUpdated","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","GenerateCSVButton","_React$Component","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","postData","currentRef","createRef","getPostData","bind","_assertThisInitialized","_inherits","_createClass","_getPostData","_asyncToGenerator","_callee","_this2","_context","postsFromServer","formattedPostData","setState","current","link","click","apply","arguments","serverPostData","resultArray","firstArray","row","currentRow","newRow","CSVLink","data","filename","ref","Component","App","posts","setPosts","_useState3","_useState4","showingCreateNewPostForm","setShowingCreateNewPostForm","_useState5","_useState6","postCurrentlyBeingUpdated","setPostCurrentlybeingUpdated","getPosts","deletePost","deletedPostPostId","postsCopy","_toConsumableArray","index","findIndex","postsCopyPost","currentIndex","splice","onPostDeleted","scope","map","window","confirm","createdPost","updatedPost","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d94e5dfd.chunk.js","sourcesContent":["const API_BASE_URL_DEVELOPMENT = \"http://localhost:5082\";\nconst API_BASE_URL_PRODUCTION = \"https://launchhouse.azurewebsites.net\";\n\nconst ENDPOINTS = {\n  GET_ALL_POSTS: \"get-all-posts\",\n  GET_POST_BY_ID: \"get-post-by-id\",\n  CREATE_POST: \"create-post\",\n  UPDATE_POST: \"update-post\",\n  DELETE_POST_BY_ID: \"delete-post-by-id\"\n};\n\nconst development = {\n  API_URL_GET_ALL_POSTS: `${API_BASE_URL_DEVELOPMENT}/${ENDPOINTS.GET_ALL_POSTS}`,\n  API_URL_GET_POST_BY_ID: `${API_BASE_URL_DEVELOPMENT}/${ENDPOINTS.GET_POST_BY_ID}`,\n  API_URL_CREATE_POST: `${API_BASE_URL_DEVELOPMENT}/${ENDPOINTS.CREATE_POST}`,\n  API_URL_UPDATE_POST: `${API_BASE_URL_DEVELOPMENT}/${ENDPOINTS.UPDATE_POST}`,\n  API_URL_DELETE_POST_BY_ID: `${API_BASE_URL_DEVELOPMENT}/${ENDPOINTS.DELETE_POST_BY_ID}`\n};\n\nconst production = {\n  API_URL_GET_ALL_POSTS: `${API_BASE_URL_PRODUCTION}/${ENDPOINTS.GET_ALL_POSTS}`,\n  API_URL_GET_POST_BY_ID: `${API_BASE_URL_PRODUCTION}/${ENDPOINTS.GET_POST_BY_ID}`,\n  API_URL_CREATE_POST: `${API_BASE_URL_PRODUCTION}/${ENDPOINTS.CREATE_POST}`,\n  API_URL_UPDATE_POST: `${API_BASE_URL_PRODUCTION}/${ENDPOINTS.UPDATE_POST}`,\n  API_URL_DELETE_POST_BY_ID: `${API_BASE_URL_PRODUCTION}/${ENDPOINTS.DELETE_POST_BY_ID}`\n};\n\nconst Constants =\n  process.env.NODE_ENV === \"development\" ? development : production;\n\nexport default Constants;\n","import React, { useState } from 'react';\nimport Constants from '../utilities/Constants';\n\nexport default function PostCreateForm(props) {\n  const initialFormData = Object.freeze({\n    title: props.post.title,\n    content: props.post.content\n  });\n  const [formData, setFormData] = useState(initialFormData)\n\n  const handelChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n\n    const postToCreate = {\n      postId: 0,\n      title: formData.title,\n      content: formData.content\n    };\n    \n    const url = Constants.API_URL_CREATE_POST;\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify(postToCreate)\n    })\n      .then(response => response.json())\n      .then(responseFromServer => {\n        console.log(responseFromServer);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    props.onPostCreated(postToCreate);\n  };\n\n  return (\n    <form className='w-100 px-5'>\n        <h1 className='mt-5'>Create new post</h1>\n\n        <div className='mt-5'>\n          <label className='h3 form-label'>Post Title</label>\n          <input value={formData.title} name='title' type='text' className='form-control' onChange={handelChange} />\n        </div>\n\n        <div className='mt-4'>\n          <label className='h3 form-label'>Post Content</label>\n          <input value={formData.content} name='content' type='text' className='form-control' onChange={handelChange} />\n        </div>\n\n        <button onClick={handelSubmit} className='btn btn-dark btn-lg w-100 mt-5'>Submit</button>\n        <button onClick={() => props.onPostCreated(null)} className='btn btn-secondary btn-lg w-100 mt-3'>Cancel</button>\n    </form>\n  )\n};\n","import React, { useState } from \"react\";\nimport Constants from \"../utilities/Constants\";\n\nexport default function PostUpdateForm(props) {\n  const initialFormData = Object.freeze({\n    title: props.post.title,\n    content: props.post.content\n  });\n  const [formData, setFormData] = useState(initialFormData);\n\n  const handelChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n\n    const postToUpdate = {\n      postId: props.post.postId,\n      title: formData.title,\n      content: formData.content\n    };\n\n    const url = Constants.API_URL_UPDATE_POST;\n\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postToUpdate)\n    })\n      .then(response => response.json())\n      .then(responseFromServer => {\n        console.log(responseFromServer);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    props.onPostUpdated(postToUpdate);\n  };\n\n  return (\n    <form className=\"w-100 px-5\">\n      <h1 className=\"mt-5\">Updating the post titled \"{props.post.title}\".</h1>\n\n      <div className=\"mt-5\">\n        <label className=\"h3 form-label\">Post Title</label>\n        <input\n          value={formData.title}\n          name=\"title\"\n          type=\"text\"\n          className=\"form-control\"\n          onChange={handelChange}\n        />\n      </div>\n\n      <div className=\"mt-4\">\n        <label className=\"h3 form-label\">Post Content</label>\n        <input\n          value={formData.content}\n          name=\"content\"\n          type=\"text\"\n          className=\"form-control\"\n          onChange={handelChange}\n        />\n      </div>\n\n      <button onClick={handelSubmit} className=\"btn btn-dark btn-lg w-100 mt-5\">\n        Submit\n      </button>\n      <button\n        onClick={() => props.onPostUpdated(null)}\n        className=\"btn btn-secondary btn-lg w-100 mt-3\"\n      >\n        Cancel\n      </button>\n    </form>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport Constants from \"../utilities/Constants\";\n\nclass GenerateCSVButton extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      postData: []\n    };\n    this.currentRef = React.createRef();\n    this.getPostData = this.getPostData.bind(this);\n  }\n\n  async getPostData() {\n    const url = Constants.API_URL_GET_ALL_POSTS;\n\n    await fetch(url, {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(postsFromServer => {\n        const formattedPostData = this.formattedPostData(postsFromServer);\n\n        this.setState({ postData: formattedPostData }, () => {\n          this.currentRef.current.link.click();\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n  }\n\n  formattedPostData(serverPostData) {\n    if (serverPostData.length == 0) {\n      return [];\n    }\n    const resultArray = [];\n    const firstArray = Object.keys(serverPostData[0]);\n    resultArray.push(firstArray);\n    for (let row in serverPostData) {\n      const currentRow = serverPostData[row];\n      const newRow = [];\n      for (let i = 0; i < firstArray.length; i++) {\n        newRow.push(currentRow[firstArray[i]]);\n      }\n      resultArray.push(newRow);\n    }\n    return resultArray;\n  }\n\n  render() {\n    return (\n      <div>\n        <button className=\"btn btn-secondary btn-lg w-100 mt-4\" onClick={this.getPostData}>Download CSV</button>\n        <CSVLink\n          data={this.state.postData}\n          filename=\"post.csv\"\n          className=\"hidden\"\n          ref={this.currentRef}\n          target=\"_blank\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default GenerateCSVButton;\n","import React, { useState } from \"react\";\nimport Constants from \"./utilities/Constants\";\nimport PostCreateForm from \"./components/PostCreateForm\";\nimport PostUpdateForm from \"./components/PostUpdateForm\";\nimport GenerateCSVButton from \"./components/GenerateCSVButton\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [showingCreateNewPostForm, setShowingCreateNewPostForm] = useState(\n    false\n  );\n  const [postCurrentlyBeingUpdated, setPostCurrentlybeingUpdated] = useState(\n    null\n  );\n\n  function getPosts() {\n    const url = Constants.API_URL_GET_ALL_POSTS; // from C# API calls\n\n    fetch(url, {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(postsFromServer => {\n        setPosts(postsFromServer);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n  }\n\n  function deletePost(postId) {\n    const url = `${Constants.API_URL_DELETE_POST_BY_ID}/${postId}`; // from C# API calls\n\n    fetch(url, {\n      method: \"DELETE\"\n    })\n      .then(response => response.json())\n      .then(responseFromServer => {\n        console.log(responseFromServer);\n        onPostDeleted(postId);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row min-vh-100\">\n        <div className=\"col d-flex flex-column justify-content-center align-items-center\">\n          {showingCreateNewPostForm === false &&\n            postCurrentlyBeingUpdated === null && (\n              <div>\n                <h1>Hi My Name is Charlie</h1>\n                <div className=\"mt-5\">\n                  <button\n                    onClick={getPosts}\n                    className=\"btn btn-dark btn-lg w-100\"\n                  >\n                    {\" \"}\n                    Get Posts from server\n                  </button>\n                  <button\n                    onClick={() => setShowingCreateNewPostForm(true)}\n                    className=\"btn btn-secondary btn-lg w-100 mt-4\"\n                  >\n                    Create New Post\n                  </button>\n                </div>\n              </div>\n            )}\n\n          {posts.length > 0 &&\n            showingCreateNewPostForm === false &&\n            postCurrentlyBeingUpdated === null &&\n            renderPostsTable()}\n\n          {posts.length > 0 &&\n            showingCreateNewPostForm === false &&\n            postCurrentlyBeingUpdated === null && <GenerateCSVButton />}\n\n          {showingCreateNewPostForm && (\n            <PostCreateForm\n              post={{ title: \"\", content: \"\" }}\n              onPostCreated={onPostCreated}\n            />\n          )}\n\n          {postCurrentlyBeingUpdated !== null && (\n            <PostUpdateForm\n              post={postCurrentlyBeingUpdated}\n              onPostUpdated={onPostUpdated}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderPostsTable() {\n    return (\n      <div className=\"table-responsive mt-5\">\n        <table className=\"table table-bordered border-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">PostId (PK)</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Content</th>\n              <th scope=\"col\">CRUD Operations</th>\n            </tr>\n          </thead>\n          <tbody>\n            {posts.map(post => (\n              <tr key={post.postId}>\n                <th scope=\"row\">{post.postId}</th>\n                <td>{post.title}</td>\n                <td>{post.content}</td>\n                <td>\n                  <button\n                    onClick={() => setPostCurrentlybeingUpdated(post)}\n                    className=\"btn btn-dark btn-lg mx-3 my-3\"\n                  >\n                    Update\n                  </button>\n                  <button\n                    onClick={() => {\n                      if (\n                        window.confirm(\n                          `Are you sure you want to delete thie post tiled \"${post.title} \"?\"`\n                        )\n                      )\n                        deletePost(post.postId);\n                    }}\n                    className=\"btn btn-secondary btn-lg\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <button\n          onClick={() => setPosts([])}\n          className=\"btn btn-dark btn-lg w-100\"\n        >\n          Empty React posts array\n        </button>\n      </div>\n    );\n  }\n\n  function onPostCreated(createdPost) {\n    setShowingCreateNewPostForm(false);\n    if (createdPost === null) {\n      return;\n    }\n    alert(\n      `Post successfully created. After clicking OK, your new post titled \"${createdPost.title}\" will show up in the table below.`\n    );\n\n    getPosts();\n  }\n\n  function onPostUpdated(updatedPost) {\n    setPostCurrentlybeingUpdated(null);\n\n    if (updatedPost === null) {\n      return;\n    }\n    let postsCopy = [...posts];\n\n    const index = (postsCopy.findIndex = postsCopy.findIndex(\n      (postsCopyPost, currentIndex) => {\n        if (postsCopyPost.postId === updatedPost.postId) {\n          return true;\n        }\n      }\n    ));\n\n    if (index !== -1) {\n      postsCopy[index] = updatedPost;\n    }\n\n    setPosts(postsCopy);\n\n    alert(\n      `Post successfully updated. After clicking OK, look for the post with the title \"${updatedPost.title}\" in the table below to see the updates.`\n    );\n  }\n\n  function onPostDeleted(deletedPostPostId) {\n    let postsCopy = [...posts];\n\n    const index = (postsCopy.findIndex = postsCopy.findIndex(\n      (postsCopyPost, currentIndex) => {\n        if (postsCopyPost.postId === deletedPostPostId) {\n          return true;\n        }\n      }\n    ));\n\n    if (index !== -1) {\n      postsCopy.splice(index, 1);\n    }\n\n    setPosts(postsCopy);\n\n    alert(\n      `Post successfully deleted. After clicking OK, look at the table below to see  your post disappear.`\n    );\n  }\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.css\";\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}