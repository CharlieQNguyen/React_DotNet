{"ast":null,"code":"import _slicedToArray from \"/Users/DoWork/Desktop/React_DotNet/reactclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/DoWork/Desktop/React_DotNet/reactclient/src/App.js\";\nimport React, { useState } from \"react\";\nimport Constants from \"./utilities/Constants\";\nimport PostCreateForm from \"./components/PostCreateForm\";\nfunction App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showingCreateNewPostForm = _useState4[0],\n    setShowingCreateNewPostForm = _useState4[1];\n  function getPosts() {\n    var url = Constants.API_URL_GET_ALL_POSTS; // from C# API calls\n\n    fetch(url, {\n      method: \"GET\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (postsFromServer) {\n      setPosts(postsFromServer);\n    }).catch(function (error) {\n      console.log(error);\n      alert(error);\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row min-vh-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col d-flex flex-column justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, showingCreateNewPostForm === false && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"ASP.Net Core React\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    Click: getPosts,\n    className: \"btn btn-dark btn-lg w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \" Get Posts from server\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {},\n    className: \"btn btn-secondary btn-lg w-100 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Create New Post\"))), posts.length > 0 && showingCreateNewPostForm === false && renderPostsTable(), showingCreateNewPostForm && /*#__PURE__*/React.createElement(PostCreateForm, {\n    onPostCreated: onPostCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))));\n  function renderPostsTable() {\n    var _this = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-responsive mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered border-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"PostId (PK)\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Content\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"CRUD Operations\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, posts.map(function (post) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: post.postId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"row\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, post.postId), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, post.title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, post.content), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-dark btn-lg mx-3 my-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-lg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }, \"Delete\")));\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return setPosts([]);\n      },\n      className: \"btn btn-dark btn-lg w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Empty React posts array\"));\n  }\n  function onPostCreated(createdPost) {\n    if (createdPost === null) {\n      return;\n    }\n    alert(\"Post successfully created. After clicking OK, your new post titled \\\"\".concat(createdPost.title, \"\\\" will show up in the table below.\"));\n    getPosts();\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","Constants","PostCreateForm","App","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","showingCreateNewPostForm","setShowingCreateNewPostForm","getPosts","url","API_URL_GET_ALL_POSTS","fetch","method","then","response","json","postsFromServer","catch","error","console","log","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Click","onClick","length","renderPostsTable","onPostCreated","_this","scope","map","post","key","postId","title","content","createdPost","concat"],"sources":["/Users/DoWork/Desktop/React_DotNet/reactclient/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Constants from \"./utilities/Constants\";\nimport PostCreateForm from \"./components/PostCreateForm\";\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [showingCreateNewPostForm, setShowingCreateNewPostForm] = useState(\n    false\n  );\n\n  function getPosts() {\n    const url = Constants.API_URL_GET_ALL_POSTS; // from C# API calls\n\n    fetch(url, {\n      method: \"GET\"\n    })\n      .then(response => response.json())\n      .then(postsFromServer => {\n        setPosts(postsFromServer);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row min-vh-100\">\n        <div className=\"col d-flex flex-column justify-content-center align-items-center\">\n          {showingCreateNewPostForm === false && (\n            <div>\n              <h1>ASP.Net Core React</h1>\n              <div className=\"mt-5\">\n                <button Click={getPosts} className=\"btn btn-dark btn-lg w-100\"> Get Posts from server</button>\n                <button onClick={() => {}} className=\"btn btn-secondary btn-lg w-100 mt-4\">Create New Post</button>\n              </div>\n            </div>\n          )}\n\n          {posts.length > 0 && showingCreateNewPostForm === false &&\n            renderPostsTable()}\n\n          {showingCreateNewPostForm && (\n            <PostCreateForm onPostCreated={onPostCreated} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  function renderPostsTable() {\n    return (\n      <div className=\"table-responsive mt-5\">\n        <table className=\"table table-bordered border-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">PostId (PK)</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Content</th>\n              <th scope=\"col\">CRUD Operations</th>\n            </tr>\n          </thead>\n          <tbody>\n            {posts.map(post => (\n              <tr key={post.postId}>\n                <th scope=\"row\">{post.postId}</th>\n                <td>{post.title}</td>\n                <td>{post.content}</td>\n                <td>\n                  <button className=\"btn btn-dark btn-lg mx-3 my-3\">\n                    Update\n                  </button>\n                  <button className=\"btn btn-secondary btn-lg\">Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <button\n          onClick={() => setPosts([])}\n          className=\"btn btn-dark btn-lg w-100\"\n        >\n          Empty React posts array\n        </button>\n      </div>\n    );\n  }\n\n  function onPostCreated(createdPost) {\n    if (createdPost === null) {\n      return;\n    }\n    alert(\n      `Post successfully created. After clicking OK, your new post titled \"${createdPost.title}\" will show up in the table below.`\n    );\n\n    getPosts();\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}